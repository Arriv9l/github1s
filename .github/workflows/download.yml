name: Download

on:
  push:
    branches:
      - download
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        id: cache-yarn
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-yarn-
            
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      
      - name: Execute yarn
        run: |
          if [[ steps.cache-yarn.outputs.cache-hit != 'true' && steps.cache-node-modules.outputs.cache-hit != 'true' ]]; then
            yarn --frozen-lockfile
          else
            yarn --prefer-offline
          fi
      
      - run: yarn eslint
      - run: yarn build
      - uses: microsoft/playwright-github-action@v1
      - run: yarn test:ci
      
      - name: Install 7zip
        run: |
          sudo add-apt-repository universe
          sudo apt update
          sudo apt install p7zip-full p7zip-rar
      
      - name: Archive All
        run: 7z a $GITHUB_WORKSPACE/github1s.7z -mx3 ./

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: github1s
          path: github1s.7z
